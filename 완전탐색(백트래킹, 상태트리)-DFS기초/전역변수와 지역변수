'''전역변수와 지역변수
    
    -전역변수는 모든 함수가 접근할 수 있다.
    -지역변수

'''

def DFS1(): #이 함수가 실행되면, 출력해야할 cnt가 지역변수인지 먼저 확인한다.
    cnt = 3 #지역변수 cnt 생성 + 값 할당
    print(cnt) #지역변수면 그대로 출력, 전역변수라면 cnt가 저장된 공간을 찾는다.

    
def DFS2(): #인터프리터가 DFS2부터 언어번역을 하고 밑으로 내려간다.
     
    if cnt == 5: #인터프리터 번역으로 현재 지역변수 cnt는 있는 상태이지만, 값이 할당되지않아 이줄부터 오류가 난다.
        cnt = cnt + 1 #이 줄에서 지역변수 cnt가 생성
        print(cnt)
     
    
if __name__ == "__main__":
    cnt = 5 #전역변수 생성 + 값 할당
    DFS1()
    DFS2()
    print(cnt)
    
    
'''global 선언으로 전역변수 사용.'''  


def DFS1(): #이 함수가 실행되면, 출력해야할 cnt가 지역변수인지 먼저 확인한다.
    cnt = 3 #지역변수 cnt 생성 + 값 할당
    print(cnt) #지역변수면 그대로 출력, 전역변수라면 cnt가 저장된 공간을 찾는다.

    
def DFS2(): #인터프리터가 DFS2부터 언어번역을 하고 밑으로 내려간다.
    global cnt
    if cnt == 5: #인터프리터 번역으로 현재 지역변수 cnt는 있는 상태이지만, 값이 할당되지않아 이줄부터 오류가 난다.
        cnt = cnt + 1 #위에서 global 선언했으므로 인터프리터가 cnt를 지역변수로 보지 않는다.
        print(cnt)
        
        
if __name__ == "__main__":
    cnt = 5 #전역변수 생성 + 값 할당
    DFS1()      #3
    DFS2()      #6
    print(cnt)  #6 DFS2함수 진행되면서 global cnt가 6이 됨.
    
    
    
'''리스트 참조'''
def DFS():
    a[0] = 7 #로컬 리스트 생성이 아니라 참조
    print(a)
    
if __name__ == "__main__":
    a = [1,2,3]
    DFS()     #[7,2,3]
    print(a)  #[7,2,3]
    
    
    
    
'''리스트 생성'''
def DFS():
    a = [7, 8] #로컬 리스트 생성
    print(a)
    
if __name__ == "__main__":
    a = [1,2,3]
    DFS()     #[1,2,3]
    print(a)  #[7,8]
    
    
    
    
'''리스트 생성, 에러 뜨는 경우'''
def DFS():
    a = a + [4] #앞의 a는 로컬 리스트를 만들겠다는 것인데, 값을 할당할 때, 기존의 a리스트는 값이 없다.
    print(a)
    
if __name__ == "__main__":
    a = [1,2,3]
    DFS()     #[1,2,3]
    print(a)  #[7,8]    
    
    
    
    
'''리스트 생성, 에러 안 뜨게 global'''
def DFS():
    global a #전역 리스트 사용하게 됨.
    a = a + [4] #앞의 a는 로컬 리스트를 만들겠다는 것인데, 값을 할당할 때, 기존의 a리스트는 값이 없다.
    print(a)
    
if __name__ == "__main__":
    a = [1,2,3]
    DFS()     #[1,2,3,4]
    print(a)  #[1,2,3,4]    
    
